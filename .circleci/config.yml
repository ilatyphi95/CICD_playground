# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# orbs:

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs

commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}
jobs:
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
                    --template-file template.yml \
                    --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
                    --region us-east-1

  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["53:99:4a:fc:8e:c5:38:b5:06:2a:28:9e:a5:0e:65:c3"]
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible

      - run:
          name: Run Playbook and configure server
          command: |
            ansible-playbook -i inventory.txt setup_web_server.yml

  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run:
          name: smoke test
          command: return 1

  rollback_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
                    --template-file template.yml \
                    --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
                    --region us-east-1

      - run: return 1
      - destroy_environment

  # Executes the bucket.yml - Deploy an S3 bucket, and interface with that bucket to synchronize the files between local and the bucket.
  # Note that the `--parameter-overrides` let you specify a value that override parameter value in the bucket.yml template file.
  create_and_deploy_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Execute bucket.yml - Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
            --template-file bucket.yml \
            --stack-name stack-create-bucket-${CIRCLE_WORKFLOW_ID:0:7} \
            --parameter-overrides MyBucketName="mybucket-${CIRCLE_WORKFLOW_ID:0:7}"
      # Uncomment the step below if yoou wish to upload all contents of the current directory to the S3 bucket
      - run: aws s3 sync . s3://mybucket-${CIRCLE_WORKFLOW_ID:0:7} --delete
workflows:
  cloud_formation_stackflow:
    jobs:
      # - create_infrastructure
      # - configure_infrastructure
      # - smoke_test
      # - rollback_infrastructure
      - create_and_deploy_front_end
